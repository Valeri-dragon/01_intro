const l = (log) => {
    console.log(log);
}
//Суббота или Воскрсенье
var days = [
    'Воскресенье',
    'Понедельник',
    'Вторник',
    'Среда',
    'Четверг',
    'Пятница',
    'Суббота'
];
var d = new Date();
var n = d.getDay();
l(days[n]);

l(days[n] === 'Суббота' || days[n] === 'Воскресенье' ? days[n] + "— это выходной" : days[n] + " — это точно не выходной")

//Длина больше 3 и меньше 26

let password = '******'

l(password.length > 3 && password.length < 26 ? 'Допустимый пароль' : 'Такой пароль не подходит');

let x = 8;
//приоритет – сначала &&, потом ||
l(x === 13 || x > 0 && x < 11 ? x + " Число 13 или число от 1 до 10 " : x + " число больше 10 или меньше 0 и не 13 ")

//управление приоритетом с помощью скобок

let f = 5; //123

if ((f % 3 === 0 || f % 2 === 0) && f > 100) {
    l(f + ' делится на 3 или на 2 и больше 100')
}

//инвертируем условие
let f1 = 101
if (!(f1 % 3 === 0 || f1 % 2 === 0) && f1 > 100) {
    l(f1 + ' не делится ни на 2, ни 3 и больше 100')
}

//Длина больше 3 и меньше 26 и пароль дожлен содержать спецсимволы

let RegexPass = (password) => {
    let simbol = /^(?=.*?[-_])/    /*/^(?=.*?[#?!@$%^&*-_])/*/
    l(simbol.test(password) && (password.length > 3 && password.length < 26) ? 'Допустимый пароль' : 'Такой пароль не подходит');
}

RegexPass('1234-');
RegexPass('4321_');
RegexPass('qaz-xsw');
RegexPass('_zxd');
RegexPass('_-a');
RegexPass('qaz');
RegexPass('_-3');
RegexPass('123456789');

/*
В переменных userName, userSurname даны имя и фамилия пользователя. 
При этом в строках беспорядок с большими и маленькими буквами, и нужно оформить строки единообразно. 
Для этого первые буквы имени и фамилии приведите к верхнему регистру (большие буквы), а оставшиеся — к нижнему (маленькие буквы). 
Запишите результат в новые переменные и выведите их значения с помощью console.log. 
С помощью тернарных операторов и console.log выведите сообщение «Имя было преобразовано» или «Имя осталось без изменений» 
для имени и фамилии в зависимости от того, были ли исходные строки равны преобразованным.
*/
let ChangeCaseFullName = (userName, userSurname) => {
    let fullName = [userName, userSurname];
    let arr = []
    fullName.forEach((e) => {
        let firstChar = e.charAt(0).toUpperCase();
        let restOfString = e.slice(1).toLowerCase();
        let result = firstChar + restOfString;
        arr.push(result)
      
    }
);
l(`Имя, Фамилия до преобразования "${fullName.join(' ')}".
 Имя, фамилия после "${arr.join(' ')}". 
 Результат:
 ${userName === arr[0] ? 'имя осталось без изменений' : 'имя было преобразовано'}, 
 ${userSurname === arr[1] ? 'фамилия осталась без изменений' : 'фамилия была преобразована'}`);
  }

ChangeCaseFullName('Валерия', 'теРебилова');

/*
В переменной number записано число. Необходимо с помощью console.log вывести сообщение, указывающее на чётность или нечётность числа
*/
const EvenOrOdd = (number)=>{
    l(number % 2 === 0 ? number + " число чётное" : number + " число нечётное")
}
EvenOrOdd(1)